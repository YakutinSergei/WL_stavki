import asyncio
import random

import logging

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage
from environs import Env

from serch import get_basketball_matches

env = Env()
env.read_env()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler("bot.log", encoding="utf-8"),
        logging.StreamHandler()
    ]
)
logging.getLogger().setLevel(logging.WARNING)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞


TOKEN = env('BOT_TOKEN')  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
CHAT_ID = env('CHAT_ID')  # ID –≥—Ä—É–ø–ø—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
# üîπ –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher(storage=MemoryStorage())


# üîπ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
async def monitoring():
    from pars import analysis
    while True:
        try:
            sleep_time = random.uniform(50, 70)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
            await get_basketball_matches()
            await analysis()
            await asyncio.sleep(sleep_time)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –≤ monitoring: {e}")


# üîπ –ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():

    logging.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    await bot.send_message(text='–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω', chat_id=CHAT_ID)
    asyncio.create_task(monitoring())
    await dp.start_polling(bot)



# üîπ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(main())